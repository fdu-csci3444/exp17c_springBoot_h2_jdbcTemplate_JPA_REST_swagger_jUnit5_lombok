
# NOTE ilker default port for the built in app server to steart is 8080
server.port=8888

#logging.level.sql=

# enable h2 console. By default below is false
spring.h2.console.enabled=true
#spring.datasource.url=jdbc:h2:file:~/test
# NOTE ilker above to have the h2 db stored in(and restarted from) a file

# NOTE ilker below are the default values of h2
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#
#spring.h2.console.enabled=false
#spring.h2.console.path=/h2-console

# NOTE ilker, to access h2-console via browser with default values go to (assuming server.port=8888)
#  http://localhost:8888/h2-console
#   in "Login" page of h2, keep below default values
#    Driver Class: org.h2.Driver
#    JDBC URL: jdbc:h2:mem:testdb
#    User Name: sa
#    Password:       (leave it empty)
#   click "Connect"  (can 1st click "Test Connection" to get green "Test successfull" at bottom)
#   then click on the table "EMPLOYEE" on left hand side, click "Run" button in "SQL statement" tab to see rows in table

# to let schema-h2.sql, data-h2.sql to be used below line needs to be set
#spring.jpa.database-platform=h2

spring.jpa.generate-ddl=true
# NOTE ilker above by default is set to false. But with below line not none, then above is automatically set to true
# possible values for below are; create, update, create-drop, validate, none(default)
spring.jpa.hibernate.ddl-auto=update

# NOTE ilker below lines did not really work to solve issue with using schema.sql+jpa+data.sql
#spring.datasource.data=import.sql
#spring.datasource.data=import*.sql
#spring.jpa.properties.hibernate.hbm2ddl.import_files=import.sql

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# BEF my application specific "value"s externalized (IoC "Inversion of Control") to application.properties
my.app.values.api.version="v1"
# EOF my application specific "value"s

# BEF swagger
## swagger generated json documents link(assuming app is started on port 8888)
## NOTE ilker suggest installing "JSONView" extension to google Chrome browser to better view the JSON returned by below link
# http://localhost:8888/v2/api-docs
## swagger generated html documents link
# http://localhost:8888/swagger-ui.html
# EOF swagger 
